{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"s3/","title":"AWS Associate FreeCodeCamp Course","text":""},{"location":"s3/#s3-simple-storage-service","title":"S3 (Simple Storage Service)","text":""},{"location":"s3/#overview","title":"Overview","text":"<ul> <li>S3 is in a global region</li> <li>Serverles storage in the cloud. Unlimited storage without worry about underlying infrastructure.</li> <li> <p>Object-based storage service -&gt; data as objects, not like file systems (data as files in a file hierarchy) or block storages (data as blocks within sectors/tracks)</p> </li> <li> <p>S3 console -&gt; interface to manage your data</p> </li> <li>S3 object -&gt; container for your data.<ul> <li>Key: name of the object</li> <li>Value: the data itself, sequence of bytes</li> <li>Version ID (when versioning is enabled)</li> <li>Metadata -&gt; additional information attached to the object</li> <li>You can store data from 0 bytes to 5 terabytes in size (for bigger files, check multipart)</li> </ul> </li> <li>S3 Bucket -&gt; Buckets hold objects and can also have folder which in turn hold objects. Universal namespace (name MUST be unique globally)</li> </ul>"},{"location":"s3/#comparision-between-s3-options","title":"Comparision between S3 options","text":"<p>S3 trades retrieval time, accessibility and durability for cheaper storage. From the most expensive to the cheapest:</p> <ul> <li>Standard (default)</li> <li>Intelligent Tiering</li> <li>Standard Infrequently Accessed (IA)</li> <li>One Zone IA</li> <li>Glacier Instant Retrieval</li> <li>Glacier Flexible Retrieval</li> <li>Glacier Deep Archive</li> <li>Reduced redundancy</li> <li>S3 on Outposts</li> </ul> <p>Check S3 Storage Classes Comparison to comparise the eight S3 services</p>"},{"location":"s3/#s3-guarantees","title":"S3 guarantees","text":"<ul> <li>S3 is built for 99.99% availability</li> <li>Amazon guarantee 99.9% availability</li> <li>Amazon guarantees 99.999999999% (11' 9s) of durability</li> </ul>"},{"location":"s3/#security-in-s3","title":"Security in S3","text":"<ul> <li>Private by default</li> <li>Access control is configured using Bucket Policies and ACL (Access Control Lists)<ul> <li>ACLs: legacy feature (not deprecated). Simplest way of granting access</li> <li>Bucket policy: JSON documnt policy to define comples rule access</li> </ul> </li> <li>Requests logs in a different bucket (even in a different AWS account)</li> </ul>"},{"location":"s3/#encryption-in-s3","title":"Encryption in S3","text":"<ul> <li>Encryption in transit -&gt; traffic between local host and S3 is secured via SSL/TLS</li> <li>Server-Side Encryption (SSE, Encryption at Rest):<ul> <li>SSE-AES -&gt; Using AES-256, S3 handkes the key</li> <li>SSE-KMS -&gt; AWS KMS and you manage the keys</li> <li>SSE-C -&gt; Customer provided key, customer manages the keys</li> </ul> </li> <li>Client-Side Encryption -&gt; customer encrypts files before uploading them to S3</li> </ul>"},{"location":"s3/#data-consistency","title":"Data consistency","text":"<ul> <li>New objects -&gt; Read after Write Consistency: able to read immediately after writing</li> <li>Overwrite or delete objects -&gt; Eventual Consistency: it takes time for S3 to replicate versions to AZS, so if you read immediately, S3 may return you an old copy. Just wait a few seconds before reading.</li> </ul>"},{"location":"s3/#cross-region-replication-crr","title":"Cross Region Replication (CRR)","text":"<ul> <li>When enabled any object that is uploadad will be automatically replicated to another region</li> <li>Higher durability and potential disaster recovery for objects</li> <li>It is required to enable versioning on both the source and destination buckets</li> <li>You can also have CRR replicate to another AWS account</li> </ul>"},{"location":"s3/#versioning","title":"Versioning","text":"<ul> <li>Store all versions of an object in S3</li> <li>Fully integrates with S3 Lifecycle rules</li> <li>Once enabled it cannot be disabled, only suspend versioning, but existing versions remains</li> <li>MFA Delete -&gt; extra protection against data deletion</li> <li>Initial versions with NULL Version ID</li> <li>When you upload a new version</li> </ul>"},{"location":"s3/#s3-lifecycle-management","title":"S3 Lifecycle Management","text":"<ul> <li>Automate process of moving objects to different Storage Classes or deleting objects</li> <li>Can be used together with versioning -&gt; can be applied to both current an previous versions</li> </ul>"},{"location":"s3/#transfer-acceleration","title":"Transfer Acceleration","text":"<ul> <li>Fast and secure files transfer over long distances between end users and S3 bucket</li> <li>Uses Edge Locations (users-closer data centers)</li> <li>Users utilizes a distinct URL for an Edge Location</li> <li>Use an optimized network path (Amazon's backbone network)</li> </ul>"},{"location":"s3/#presigned-urls","title":"Presigned URLS","text":"<ul> <li>Generate temporary URL to provide access to private objects, allows users to both upload and download object data.</li> </ul>"},{"location":"s3/#mfa-delete","title":"MFA Delete","text":"<ul> <li>Ensures users cannot delete objects from a bucket unless they provide their MFA code.</li> <li>Conditions to enable it:<ul> <li>AWS CLI must be used to turn on MFA</li> <li>Versioning enable</li> </ul> </li> </ul>"}]}