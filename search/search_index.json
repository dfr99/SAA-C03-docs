{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>https://aws.amazon.com/certification/certified-solutions-architect-associate/</p> <p>https://d1.awsstatic.com/training-and-certification/docs-sa-assoc/AWS-Certified-Solutions-Architect-Associate_Sample-Questions.pdf</p> <p>https://d1.awsstatic.com/training-and-certification/docs-sa-assoc/AWS-Certified-Solutions-Architect-Associate_Exam-Guide.pdf</p> <p>https://explore.skillbuilder.aws/learn/course/13596/preguntas-de-practica-oficiales-aws-certified-solutions-architect-associate-saa-c03-espanol-de-espana-aws-certified-solutions-architect-associate-official-practice-question-set-saa-c03-spanish-from-spain</p> <p>https://explore.skillbuilder.aws/learn/course/14760/exam-prep-aws-certified-solutions-architect-associate-saa-c03</p>"},{"location":"cli/","title":"Programmatic access","text":""},{"location":"cli/#cli","title":"CLI","text":"<p>AWS Command Line Interface</p>"},{"location":"cli/#overview","title":"Overview","text":"<ul> <li>Control multiple AWS services from command line and automate them through scripts</li> <li>[Installation documentation]https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html)</li> <li>Important flags:<ul> <li><code>--profile</code>: switch between AWS accounts (requires to configure <code>~/.aws/credentials</code> file with profiles)</li> <li><code>--output</code>: change command output between json, text or table</li> </ul> </li> </ul>"},{"location":"cli/#sdk","title":"SDK","text":"<p>AWS Software Development Kit</p>"},{"location":"cli/#overview_1","title":"Overview","text":"<ul> <li>Control multiple AWS servics using populer programing languages</li> <li>Set of tools and libraries that you can use to create apps for a specific software package, letting you to integrate AWS services with your apps<ul> <li>Python (boto3)</li> <li>Go</li> <li>Javascript</li> <li>Ruby</li> </ul> </li> </ul>"},{"location":"cli/#access-keys-and-secret","title":"Access keys and Secret","text":"<ul> <li>Available to be created when Programmatic Access for a AWS user is enabled</li> <li>Access Key ID and Secret Access Key</li> <li>Stored locally on user home on plain text file (eg. <code>~/.aws/credentials</code>)</li> </ul>"},{"location":"cli/#cloud9","title":"Cloud9","text":"<ul> <li>Cloud-based integrated development environment (IDE), accessible through the browser</li> <li>Includes a cloud editor, debugger and a terminal</li> <li>Prepare with essential tools for most of the popular programming languages (Python, JavaScript)</li> </ul>"},{"location":"cognito/","title":"Cognito","text":""},{"location":"cognito/#overview","title":"Overview","text":"<ul> <li>Dencentralized Managed Authentication</li> <li>Sign-up, sign-in integration for your applications</li> <li>Identity broker between AWS and identity provider, generating a JSON Wbe Token after successfull user authentication</li> </ul>"},{"location":"cognito/#web-identity-federation","title":"Web identity federation","text":"<ul> <li>To exchange identity and security information between an identity provider and an application</li> </ul>"},{"location":"cognito/#identity-provider","title":"Identity Provider","text":"<ul> <li>Trusted provider of your user identity that lets you use authenticate to access other services</li> <li>Types:<ul> <li>SSO (Single Sign On) -&gt; SAML (Security Assertion Markup Language)</li> <li>OAuth -&gt; OIDC (OpenID Connect)</li> </ul> </li> </ul>"},{"location":"cognito/#user-pools","title":"User Pools","text":"<ul> <li>User directories used to manage the actions for web and mobile apps</li> <li>Use JSON Web Token to persist authentication<ul> <li>Sign-up</li> <li>Sign-in</li> <li>Account recovery</li> <li>Account verification</li> </ul> </li> <li>Decentralize your authentication</li> </ul>"},{"location":"cognito/#attributes","title":"Attributes","text":"<ul> <li>Password requirements</li> <li>Apply MFA</li> <li>Restrict users access (on their own, admin verification)</li> <li>Trigger custom logs via Lambdasafter actions</li> </ul>"},{"location":"cognito/#identity-pools","title":"Identity Pools","text":"<ul> <li>Temporary credentials to access AWS services</li> <li>Actual mechanism authorizing access to the AWS resources</li> <li>Authentication providers (Cognito - Amazon - Facebook)</li> <li>Unauthenticated identities: provide a unique identifier and AWS credentials to enable access</li> </ul>"},{"location":"cognito/#cognito-sync","title":"Cognito Sync","text":"<ul> <li>Sync user data and preferences across devices</li> <li>Push synchronization to push updates and synchronize data</li> <li>Uses SNS to send notifications to all user devices when data in the cloud changes</li> </ul>"},{"location":"ec2/","title":"EC2","text":"<p>Elastic Compute Cloud</p>"},{"location":"ec2/#overview","title":"Overview","text":"<ul> <li>Highly configurable server</li> <li>Flexible, it is resizable compute capacity</li> <li>Anything and everything on AWS uses EC2 Instances underneath</li> </ul>"},{"location":"ec2/#instances-types","title":"Instances Types","text":"<ul> <li>General purpose: T3, M5; balance of compute, memory and networking resources</li> <li>Compute Optimized: C5, C5n; high performance processor</li> <li>Memory Optimized: R5, R5a, X1; fast performance for workloads that process large data sets in memory</li> <li>Accelerated Optimized: P3, G3, F1; hardware accelerators, co-processors</li> <li>Storage Optimized: I3, D2, H1; high, sequential read and write access to very large data sets in local storage</li> </ul>"},{"location":"ec2/#instances-sizes","title":"Instances sizes","text":"<ul> <li>Sizes generally doble in pric and key attributes</li> <li>To upgrade or downgrade just up or down to the next size, respectively</li> </ul>"},{"location":"ec2/#instace-profiles","title":"Instace Profiles","text":"<ul> <li>Attach a role to an Instance to give it acces to AWS Resources without embedding AWS credentials directly (not recommendend, avoid this practice)</li> <li>Reference to a IAM role</li> </ul>"},{"location":"iam/","title":"IAM","text":"<p>Identify and Access Management</p>"},{"location":"iam/#overview","title":"Overview","text":"<p>Manages access of AWS users and resources</p>"},{"location":"iam/#identities","title":"Identities","text":"<ul> <li>Users: End users who log into the console or interact with AWS programmatically</li> <li>Groups: Group up Users so they all share the same permissions</li> <li>Roles: Associate permissions to a role and then assign this to Users or Groups</li> </ul>"},{"location":"iam/#policies","title":"Policies:","text":"<ul> <li>JSON documents which grant permissions for users, groups or roles to acces servicies. Attached to IAM Identities<ul> <li>Inline policies: policies attach directly to an user</li> <li>Managed policies: Managed by AWS. Labeled with an orange box. No editable</li> <li>Customer Managed policies: Created by customer which is editable</li> </ul> </li> </ul> <p>Policy JSON document structure</p>"},{"location":"iam/#password-policy","title":"Password policy","text":"<ul> <li>Set minimun requirements to a password, password rotation...</li> </ul>"},{"location":"iam/#access-keys","title":"Access keys","text":"<ul> <li>Allow users to interact with AWS service programmatically via AWS CLI or AWS SDK</li> <li>Maximum 2 Access keys per user</li> </ul>"},{"location":"iam/#mfa","title":"MFA","text":"<ul> <li>Managed by users themselves, administrator cannot directly enforce users to have MFA</li> <li>Administrator account could create a policy requiring MFA to access certain resources</li> </ul> <p>IAM CheatSheet</p>"},{"location":"route53/","title":"Route53","text":""},{"location":"route53/#introduction-to-ip","title":"Introduction to IP","text":"<ul> <li>Internet Protocol</li> <li>IP Addresses: computer identifier on a network, allows communication with it using the Internet Protocol</li> <li>Two versions:<ul> <li>IPv4: 32-bit address space</li> <li>IPv6: 128-bit address space</li> </ul> </li> </ul>"},{"location":"route53/#introduction-to-dns","title":"Introduction to DNS","text":"<ul> <li>Domain Name Service</li> <li>Translates domain names to IP addresses</li> <li>Find specific servers on the Internet depending what domain name you browse</li> </ul>"},{"location":"route53/#domain-registrers","title":"Domain registrers","text":"<ul> <li>Authorities who have the ability to assign domain names under on or more top-level domains</li> <li>Domain get registered through InterNIC, service provided by the Internet Corporation for Assigned Names and Numbers (ICANN), enforcing the uniqueness of domain names all over the internet.</li> </ul>"},{"location":"route53/#top-level-domains","title":"Top-level domains","text":"<ul> <li>Last word within a domain represents the top-level domain name</li> <li>The second word within a domain name is know as the second-level domain name</li> <li>Controlled by the Internet Assigned Numbers Authority (IANA)</li> <li>AWS has their own top level domain: .aws</li> </ul>"},{"location":"route53/#start-of-authority-soa","title":"Start of Authority (SOA)","text":"<ul> <li>SOA record stores information about the domain</li> <li>A Zone file can contain only one SOA Record</li> </ul>"},{"location":"route53/#address-a-records","title":"Address (A) Records","text":"<ul> <li>Allows you to convert the name of a domain directly into an IP Address</li> </ul>"},{"location":"route53/#canonical-names-cname-records","title":"Canonical Names (CNAME) Records","text":"<ul> <li>Used to resolve one domain name to another rather than an IP address</li> <li>Useful when you work with dynamic IPs</li> </ul>"},{"location":"route53/#name-server-ns-records","title":"Name Server (NS) Records","text":"<ul> <li>Used by top-level domain servers to direct traffic to the DNS server containing the authoritative DNS records.</li> <li>Multiple name servers can be provided for redundancy</li> <li>In AWS NS records would be pointed at the AWS servers</li> </ul>"},{"location":"route53/#time-to-live-ttl","title":"Time to Live (TTL)","text":"<ul> <li>Lenght of time that a DNS record gets cached on the resolving server</li> <li>The lower the TTL, the faster that changes to DNS records will propagate across the Internet</li> <li>Measured in seconds under IPv4</li> </ul>"},{"location":"route53/#introduction-to-route53","title":"Introduction to Route53","text":"<ul> <li>Highly available and scalable cloud DNS, integrated with AWS Services</li> <li>Functionalities:<ul> <li>Register and manage domains</li> <li>Create DNS routing rules</li> <li>Implement complex traffic flows</li> <li>Resolve VPCs outside AWS</li> <li>Monitoring DNS records</li> </ul> </li> <li>Use case: get custom domain to point to your AWS Resources</li> </ul>"},{"location":"route53/#record-sets","title":"Record Sets","text":"<ul> <li>Create record sets to point naked domain and subdomains via domain records</li> </ul>"},{"location":"route53/#alias-record","title":"Alias Record","text":"<ul> <li>AWS own special record to extend DNS functionality, allowing to detect IP changes and continuously pointing that endpoint to the correct resource</li> <li>Useful whe routing traffic to AWS resources</li> </ul>"},{"location":"route53/#routing-policies","title":"Routing policies","text":"<ul> <li>7 different types available:<ul> <li>Simple (default): 1 record, 1 or more IP addresses. Return IPs to the user in a random user</li> <li>Weighted: split traffic based on weights (traffic percentage), balancing the traffic through the different servers</li> <li>Latency-based: direct traffic based on the lowst network latency possible for the end-user based on region. Requires a latency resource record</li> <li>Failover: active/passive setups in situations where you want a primary site in one location and a secondary data recovery site in another. Monitor health-checks from primary site to determinate where to direct traffic</li> <li>Geolocation: direct traffic based on the geographic location of the origin of the request</li> <li>Geo-proximity: direct traffic based on the geographic location of users and AWS resources. Can route more or less traffic to a specific resource using a Bias value. You MUST use Route53 Traffic Flow in order to use it (select regions and visualize the bias)</li> <li>Multi-value: let you configure Route53 to return multiple values such as IP addresses for your web-servers, in response to DNS queries</li> </ul> </li> </ul>"},{"location":"route53/#traffic-flow","title":"Traffic flow","text":"<ul> <li>Visual editor that let you create routing configurations for your resources</li> <li>Support versioning</li> </ul>"},{"location":"route53/#health-checks","title":"Health Checks","text":"<ul> <li>Checks health every 30 seconds by default, reductible to 10.</li> <li>Can initial a failover routing policy if status is returned unhealthy</li> <li>Integration with CloudWatch Alarm to notify about unhealthy status</li> <li>A health check can monitor another health checks (chain reaction)</li> </ul>"},{"location":"route53/#resolver","title":"Resolver","text":"<ul> <li>Regional service that lets you route DNS queries between VPCs and on-premises networks</li> <li>DNS Resolution for Hybrid Environments</li> </ul>"},{"location":"s3/","title":"S3","text":"<p>Simple Storage Service</p>"},{"location":"s3/#overview","title":"Overview","text":"<ul> <li>S3 is in a global region</li> <li>Serverles storage in the cloud. Unlimited storage without worry about underlying infrastructure.</li> <li> <p>Object-based storage service -&gt; data as objects, not like file systems (data as files in a file hierarchy) or block storages (data as blocks within sectors/tracks)</p> </li> <li> <p>S3 console -&gt; interface to manage your data</p> </li> <li>S3 object -&gt; container for your data.<ul> <li>Key: name of the object</li> <li>Value: the data itself, sequence of bytes</li> <li>Version ID (when versioning is enabled)</li> <li>Metadata -&gt; additional information attached to the object</li> <li>You can store data from 0 bytes to 5 terabytes in size (for bigger files, check multipart)</li> </ul> </li> <li>S3 Bucket -&gt; Buckets hold objects and can also have folder which in turn hold objects. Universal namespace (name MUST be unique globally)</li> </ul>"},{"location":"s3/#comparision-between-s3-options","title":"Comparision between S3 options","text":"<p>S3 trades retrieval time, accessibility and durability for cheaper storage. From the most expensive to the cheapest:</p> <ul> <li>Standard (default)</li> <li>Intelligent Tiering</li> <li>Standard Infrequently Accessed (IA)</li> <li>One Zone IA</li> <li>Glacier Instant Retrieval</li> <li>Glacier Flexible Retrieval</li> <li>Glacier Deep Archive</li> <li>Reduced redundancy</li> <li>S3 on Outposts</li> </ul> <p>Check S3 Storage Classes Comparison to comparise the eight S3 services</p>"},{"location":"s3/#s3-guarantees","title":"S3 guarantees","text":"<ul> <li>S3 is built for 99.99% availability</li> <li>Amazon guarantee 99.9% availability</li> <li>Amazon guarantees 99.999999999% (11' 9s) of durability</li> </ul>"},{"location":"s3/#security-in-s3","title":"Security in S3","text":"<ul> <li>Private by default</li> <li>Access control is configured using Bucket Policies and ACL (Access Control Lists)<ul> <li>ACLs: legacy feature (not deprecated). Simplest way of granting access</li> <li>Bucket policy: JSON documnt policy to define comples rule access</li> </ul> </li> <li>Requests logs in a different bucket (even in a different AWS account)</li> </ul>"},{"location":"s3/#encryption-in-s3","title":"Encryption in S3","text":"<ul> <li>Encryption in transit -&gt; traffic between local host and S3 is secured via SSL/TLS</li> <li>Server-Side Encryption (SSE, Encryption at Rest):<ul> <li>SSE-AES -&gt; Using AES-256, S3 handkes the key</li> <li>SSE-KMS -&gt; AWS KMS and you manage the keys</li> <li>SSE-C -&gt; Customer provided key, customer manages the keys</li> </ul> </li> <li>Client-Side Encryption -&gt; customer encrypts files before uploading them to S3</li> <li>Files would be accessible, just when files are at rest on the AWS servers, they are going to be encrypted</li> </ul>"},{"location":"s3/#data-consistency","title":"Data consistency","text":"<ul> <li>New objects -&gt; Read after Write Consistency: able to read immediately after writing</li> <li>Overwrite or delete objects -&gt; Eventual Consistency: it takes time for S3 to replicate versions to AZS, so if you read immediately, S3 may return you an old copy. Just wait a few seconds before reading.</li> </ul>"},{"location":"s3/#cross-region-replication-crr","title":"Cross Region Replication (CRR)","text":"<ul> <li>When enabled any object that is uploadad will be automatically replicated to another region</li> <li>Higher durability and potential disaster recovery for objects</li> <li>It is required to enable versioning on both the source and destination buckets</li> <li>You can also have CRR replicate to another AWS account</li> <li>Deletion operation is not copied from one bucket to another</li> </ul>"},{"location":"s3/#versioning","title":"Versioning","text":"<ul> <li>Store all versions of an object in S3</li> <li>Fully integrates with S3 Lifecycle rules</li> <li>Once enabled it cannot be disabled, only suspend versioning, but existing versions remains</li> <li>MFA Delete -&gt; extra protection against data deletion</li> <li>Initial versions with NULL Version ID</li> <li>When you upload a new version</li> </ul>"},{"location":"s3/#s3-lifecycle-management","title":"S3 Lifecycle Management","text":"<ul> <li>Automate process of moving objects to different Storage Classes or deleting objects</li> <li>Can be used together with versioning -&gt; can be applied to both current an previous versions</li> <li>Define filters to group objects and apply the same lifecycle configurations, even using minimum and maximun object size</li> </ul>"},{"location":"s3/#transfer-acceleration","title":"Transfer Acceleration","text":"<ul> <li>Fast and secure files transfer over long distances between end users and S3 bucket</li> <li>Uses Edge Locations (users-closer data centers)</li> <li>Users utilizes a distinct URL for an Edge Location</li> <li>Use an optimized network path (Amazon's backbone network)</li> </ul>"},{"location":"s3/#presigned-urls","title":"Presigned URLS","text":"<ul> <li>Generate temporary URL to provide access to private objects, allows users to both upload and download object data.</li> <li>Command to generate presigned URL MUST be executed on the same region of the S3 bucket, using AWS CLI: <code>aws --region &lt;region&gt; s3 presign &lt;s3_url&gt; --expires-in &lt;seconds&gt;</code></li> </ul>"},{"location":"s3/#mfa-delete","title":"MFA Delete","text":"<ul> <li>Ensures users cannot delete objects from a bucket unless they provide their MFA code.</li> <li>Conditions to enable it:<ul> <li>AWS CLI must be used to turn on MFA</li> <li>Versioning enable</li> </ul> </li> </ul>"},{"location":"s3/#s3-cli","title":"S3 CLI","text":"<ul> <li><code>aws s3</code><ul> <li><code>ls</code> -&gt; List all buckets</li> <li><code>ls &lt;bucket_name&gt;</code> -&gt; list all folders and objects in bucket</li> <li><code>ls &lt;bucket_name&gt;/&lt;folder_name&gt;</code> -&gt; list all folders and objects in folder</li> <li><code>cp &lt;s3_url&gt; &lt;local_folder&gt;</code> -&gt; downloads object to your local</li> <li><code>cp &lt;local_file&gt; &lt;s3_url&gt;</code> -&gt; uploads object to s3</li> <li><code>rm &lt;s3_url_to_object&gt;</code> -&gt; removes object from s3</li> <li><code>presign &lt;s3_url&gt; --expires-in &lt;seconds&gt;</code> -&gt; generate a presigned url for a s3 bucket that expires in seconds</li> </ul> </li> </ul>"},{"location":"s3/#s3-cheatsheets","title":"S3 CheatSheets","text":""},{"location":"snowball/","title":"Snowball","text":""},{"location":"snowball/#overview","title":"Overview","text":"<ul> <li>Petabyte-scale data transfer services</li> <li>Move data onto AWS via physical briefcase computer</li> <li>Low cost, high speed, high data volume transfer (compared to transfer data through internet)</li> </ul>"},{"location":"snowball/#features","title":"Features","text":"<ul> <li>Import and Export from S3</li> <li>Data is encrypted end-to-end (256-bit keys), uses Trusted Platform Module (TPM)</li> <li>Tamper and weather proof -&gt; ruggerized devices</li> <li>3 types:<ul> <li>AWS Snowcone<ul> <li>HDD (8TB) or SSD (14TB)</li> <li>Portable: smaller and lightweighter than Snowball Edge</li> <li>Offline data migration</li> <li>Online data transfer with AWS DataSync</li> <li>Wired and wireless networking</li> <li>NFS endpoint allows to mount it on instances</li> <li>E2E tracking</li> <li>No HIPAA Compliant</li> </ul> </li> <li>AWS Snowball Edge (more storage and with local processing):<ul> <li>LCD display</li> <li>Can use in a cluster, 5-10 devices (allows to create a Kubernetes Cluster with EKS Anywhere)</li> <li>Storage, compute or GPU optimiced (^ vCPUs)</li> <li>HIPAA Compliant</li> </ul> </li> <li>AWS Snowmobile<ul> <li>Shipping container, pulled by a semi-truck</li> <li>Transfer up to 100PB per unit</li> <li>Connect Snowmobile with user network to export data</li> <li>Import data into S3 or directly to Glacier</li> <li>GPS tracking, alarm monitoring, 24/7 video, escort security (optional)</li> <li>HIPAA Compliant</li> </ul> </li> </ul> </li> </ul>"},{"location":"vpc/","title":"VPC","text":"<p>Virtual Private Cloud</p>"},{"location":"vpc/#overview","title":"Overview","text":"<p>Logically isolated section of the AWS Cloud where you can launch AWS resources in a virtual network defined by you, giving you complete control over your virtual networking environment (\"personal data center\")</p>"},{"location":"vpc/#key-features","title":"Key features","text":"<ul> <li>Region specific, 5 VPCs per region maximum</li> <li>Each region comes with a default VPC</li> <li>200 subnets by VPC maximum</li> <li>VPC allows IPv4 and IPv6 CIDR Blocks (VPC address)</li> <li>DNS resolution enabled by default</li> <li>DNS hostnames to the instances (disabled by default)</li> <li>Default tenancy or dedicated one (dedicated host, more expensive)</li> </ul>"},{"location":"vpc/#pricing","title":"Pricing","text":"<ul> <li>Free:<ul> <li>VPCs</li> <li>Route tables</li> <li>NACLs</li> <li>IGWs</li> <li>SGs</li> <li>Subnets</li> <li>VPC Peering</li> </ul> </li> <li>Costs:<ul> <li>NAT Gateways</li> <li>VPC Endpoints</li> <li>VPN Gateway</li> <li>Customer Gateway</li> </ul> </li> </ul>"},{"location":"vpc/#default-vpc","title":"Default VPC","text":"<ul> <li>The goal is allow you to deploy instances immediately.</li> <li>IPv4 CIDR block -&gt; 172.31.0.0/16</li> <li>/20-sized subnet for each Availability Zone (AZ)</li> <li>IGW</li> <li>Default SG</li> <li>Default NACL</li> <li>Default DHCP options set for yout AWS account with your default VPC</li> <li>Default route table</li> </ul>"},{"location":"vpc/#default-everywhere-ip-00000","title":"Default Everywhere IP (0.0.0.0/0)","text":"<ul> <li>Represents all possible IP addresses</li> <li>In a IGW route table -&gt; allow all internet access</li> <li>In a SG inbound rule -&gt; allow all traffic from internet to our resources</li> </ul>"},{"location":"vpc/#bastion-deprecated","title":"Bastion (deprecated)","text":"<ul> <li>EC2 instance which are security harden</li> <li>Used to access resources via SSH or RDP that are in a private subnet</li> <li>System Manager's Session Manager replaces the need for Bastions</li> <li>Guacamole Bastion Host</li> </ul>"},{"location":"vpc/#direct-connect","title":"Direct Connect","text":"<ul> <li>Dedicated network connections from on-premises to AWS</li> <li>Very fast network (from 50Mbps to 100Gbps)</li> <li>Great for high traffic networks. Reliable and secure</li> </ul>"},{"location":"vpc/#flow-logs","title":"Flow Logs","text":"<ul> <li>Allow to capture traffic information in-and-out of network interfaces within your VPC</li> <li>Created for VPC, subnets and network interfaces</li> <li>Log data is stores in CloudWatch Logs, where it can be viewed in detail</li> </ul>"},{"location":"vpc/#log-breakdown","title":"Log Breakdown","text":""},{"location":"vpc/#core-components","title":"Core components","text":"<p>Combining these components and services is what makes up your VPC</p>"},{"location":"vpc/#internet-gateway-igw","title":"Internet Gateway (IGW)","text":"<ul> <li>Allows VPCs to access to the internet</li> <li>Provides a target in VPC route tables for internet-routable traffic</li> <li>Perform NAT for instances that have been assigned public IPv4 addresses</li> <li>It is required to add a route to the IGW and set the destination to be the default Everywhere IP (0.0.0.0/0)</li> </ul>"},{"location":"vpc/#routing-tables","title":"Routing tables","text":"<ul> <li>Used to determine where network traffic is directed</li> <li>Each subent in your VPC MUST be associated with a route table and JUST one<ul> <li>But multiple subnets can be associated with one single route table</li> </ul> </li> </ul>"},{"location":"vpc/#security-groups","title":"Security Groups","text":"<ul> <li>Instance-level virtual firewall that controls inbound and outbound traffic EC2 instances</li> <li>All traffic is blocked by default, rules only allow traffic.</li> <li>Protocol + Port Range + Source IP + Description (optional)</li> <li>Instances can belong to multiple Security Groups and Security Groupds can contain multiple EC2 instances</li> <li>Security group rules are permissive.</li> <li>Use case: allow a IP range, a specific IP, another security group...</li> <li>Stateful: if traffic is allowed inbound it is also allowed outbound</li> <li>Changes take effect immediately.</li> <li>You cannot block specific IP addresses (see Network Access Control List (NACLs)</li> <li>Limitations: <ul> <li>Up to 1000 SGs per Region (default is 2500)</li> <li>60 inbounds and 60 outbound rules per SG</li> <li>16 SGs per Elastic Network interface (ENI, default is 5)</li> </ul> </li> </ul>"},{"location":"vpc/#subnets","title":"Subnets","text":"<p>Private by default (auto-assign public IPv4 address disabled)</p>"},{"location":"vpc/#public-subnet","title":"Public subnet","text":""},{"location":"vpc/#private-subnet","title":"Private subnet","text":""},{"location":"vpc/#virtual-private-gateway-vpn-gateway","title":"Virtual Private Gateway (VPN Gateway)","text":""},{"location":"vpc/#nat-gateway","title":"NAT gateway","text":"<ul> <li>NAT instances 100% managed by AWS</li> <li>Re-mapping one IP address space into another</li> <li>Use case: Give access to the internet to a Private Network (remap private IPs)</li> <li>Redundant instances within the selected AZ</li> <li>Automatically assigned with a public address</li> <li>Route tables for the NAT Gateway MUST be updated by administrator</li> <li>1 NAT gateway per AZ</li> <li>Starts at 5 Gbps and scales up to 45Gbps</li> </ul>"},{"location":"vpc/#nat-instances-legacy","title":"NAT Instances (legacy)","text":"<ul> <li>Individual EC2 instance on public subnet to give access to the internet (MUST exist in a public subnet)</li> <li>MUST disable source and destination network checks</li> <li>MUST have a route out of the private subnet to the NAT instance</li> <li>NAT instance size determinet how much traffic can handle</li> <li>High availability can be achieved using:<ul> <li>Autoscaling Groups</li> <li>Multiple subnets in different AZs-</li> <li>Automatic failover</li> </ul> </li> <li>Community AMIs exist to launch NAT instances</li> <li>Should not be used as Bastions</li> </ul>"},{"location":"vpc/#vpc-endpoints","title":"VPC Endpoints","text":"<ul> <li>Allows you to privately connect VPC with other AWS services<ul> <li>Instances in the VPC do not require a public IP address to communicate with service resources</li> <li>Traffic between your VPC and other services does not leave the AWS network</li> <li>Allow reliable and secure communication between services and instances</li> </ul> </li> <li>Horizontally scalled, redundant and highly available VPC component</li> <li>2 types: Interface Endpoints and Gateway Endpoints</li> </ul>"},{"location":"vpc/#interface-endpoints","title":"Interface Endpoints","text":"<ul> <li>Elastic Network Interfaces (ENI) with private IP address</li> <li>Uses AWS PowerLink</li> <li>Supports multiple services</li> </ul>"},{"location":"vpc/#pricing_1","title":"Pricing","text":"<ul> <li>Internet endpoint per AZ ($/hour): 0.01 -&gt; 24/7 ~7.5$</li> <li>0.01$/GB data processed</li> </ul>"},{"location":"vpc/#gateway-endpoints","title":"Gateway Endpoints","text":"<ul> <li>Gateway that is a target for a specific route in yout route table.</li> <li>It is FREE</li> <li>Only support S3 and DynamoDB</li> </ul>"},{"location":"vpc/#vpc-peering","title":"VPC Peering","text":"<ul> <li>Allows you to connect VPC between them over a direct network route using private IP addresses</li> <li>Instances on peered VPC behave just like they are on the same network</li> <li>Connects VPCS same or differents AWS accounts and/or regions</li> <li>Star configuration: 1 central VPC, the rest around the central one<ul> <li>No Transitive Peering -&gt; One to One to connect immediate VPC</li> </ul> </li> <li>No Overlapping CIDR Blocks</li> </ul>"},{"location":"vpc/#network-access-control-list-nacls","title":"Network Access Control List (NACLs)","text":"<ul> <li>VPCs are automatically given a default NACL which allows all outbound and inbound traffic</li> <li>Layer of security, acts like a firewall at subnet level</li> <li>Denies all traffic by default</li> <li>Stateless: any allowed inbound traffic is also allowed outbound</li> <li>Subnets an only belong to a single NACL, but a same NACLs can be associated to multiple subnets</li> <li>Seems like Linux iptables, allowing or denying incoming and outcoming subnet traffic</li> <li>Rule number -&gt; evaluation order from lowest (0) to highest (32766). AWS recommends to work in 10 or 100 increments to deal with new rules addition.</li> <li>Use case: block by IP, additional protection in case Security Groups SSH port wass left open</li> </ul>"}]}